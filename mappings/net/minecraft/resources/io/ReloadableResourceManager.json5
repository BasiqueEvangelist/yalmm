{
	source: "net/minecraft/class_3304",
	name: "net/minecraft/resources/io/ReloadableResourceManager",
	comments: [
		"Represents a resource manager that has a reload mechanism.",
		"Reloading allows reloaders to update when resources change.",
		"Accessing resources in reloads can reduce impact on game performance as well.",
		"<p>",
		"In each reload, all reloaders in this resource manager will have",
		"their {@linkplain ResourceReloader#reload reload} called.",
		"",
		"@see ResourceReloader"
	],
	fields: [
		{
			source: "field_14295",
			name: "LOGGER",
			descriptor: "Lorg/slf4j/Logger;"
		},
		{
			source: "field_14294",
			name: "type",
			descriptor: "Lnet/minecraft/class_3264;"
		},
		{
			source: "field_17935",
			name: "reloaders",
			descriptor: "Ljava/util/List;"
		},
		{
			source: "field_36391",
			name: "activeManager",
			descriptor: "Lnet/minecraft/class_6860;"
		}
	],
	methods: [
		{
			source: "<init>",
			descriptor: "(Lnet/minecraft/class_3264;)V",
			params: {
				"1": {
					name: "type"
				}
			}
		},
		{
			source: "method_14477",
			name: "registerReloader",
			descriptor: "(Lnet/minecraft/class_3302;)V",
			comments: "Registers a resource reloader to this manager.",
			params: {
				"1": {
					name: "reloader",
					comments: "the reloader"
				}
			}
		},
		{
			source: "method_18232",
			name: "reload",
			descriptor: "(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/class_4011;",
			comments: [
				"Performs a reload. Returns an object that yields some insights on the reload.",
				"<p>",
				"{@code prepareExecutor} may be asynchronous. {@code applyExecutor} must",
				"synchronize with the game engine so changes are properly made to it.",
				"The reload will only begin after {@code initialStage} has completed.",
				"Earlier elements in {@code packs} have lower priorities.",
				"<p>",
				"This also swaps the active resource manager with another backed by the given {@code packs}.",
				"",
				"@return the reload",
				"@see ResourceReloader#reload"
			],
			params: {
				"1": {
					name: "prepareExecutor",
					comments: "an executor for the prepare stage"
				},
				"2": {
					name: "applyExecutor",
					comments: "an executor for the apply stage"
				},
				"3": {
					name: "initialStage",
					comments: "a completable future to be completed before this reload"
				},
				"4": {
					name: "packs",
					comments: "a list of resource packs providing the resources"
				}
			}
		}
	]
}
